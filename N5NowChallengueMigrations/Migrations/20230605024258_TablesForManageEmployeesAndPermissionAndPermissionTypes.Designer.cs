// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using N5NowChallengue.DataService.Context;

namespace N5NowChallengueMigrations.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230605024258_TablesForManageEmployeesAndPermissionAndPermissionTypes")]
    partial class TablesForManageEmployeesAndPermissionAndPermissionTypes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("N5NowChallengue.DataService.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("EmployeeType")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(185)
                        .HasColumnType("nvarchar(185)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(85)
                        .HasColumnType("nvarchar(85)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("N5NowChallengue.DataService.Models.EmployeePermission", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<int>("RequestedStatus")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("EmployeePermissions");
                });

            modelBuilder.Entity("N5NowChallengue.DataService.Models.EmployeePermissionType", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionTypeId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "PermissionTypeId");

                    b.HasIndex("PermissionTypeId");

                    b.ToTable("EmployeePermissionTypes");
                });

            modelBuilder.Entity("N5NowChallengue.DataService.Models.Permission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("PermissionCode")
                        .IsRequired()
                        .HasMaxLength(85)
                        .HasColumnType("nvarchar(85)");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasMaxLength(185)
                        .HasColumnType("nvarchar(185)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PermissionId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("N5NowChallengue.DataService.Models.PermissionType", b =>
                {
                    b.Property<int>("PermissionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PermissionTypeDescription")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("PermissionTypeName")
                        .IsRequired()
                        .HasMaxLength(185)
                        .HasColumnType("nvarchar(185)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PermissionTypeId");

                    b.ToTable("PermissionTypes");
                });

            modelBuilder.Entity("N5NowChallengue.DataService.Models.PermissionTypePermission", b =>
                {
                    b.Property<int>("PermissionTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.HasKey("PermissionTypeId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("PermissionTypePermissions");
                });

            modelBuilder.Entity("N5NowChallengue.DataService.Models.EmployeePermission", b =>
                {
                    b.HasOne("N5NowChallengue.DataService.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("N5NowChallengue.DataService.Models.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Permission");
                });

            modelBuilder.Entity("N5NowChallengue.DataService.Models.EmployeePermissionType", b =>
                {
                    b.HasOne("N5NowChallengue.DataService.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("N5NowChallengue.DataService.Models.PermissionType", "PermissionType")
                        .WithMany()
                        .HasForeignKey("PermissionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("PermissionType");
                });

            modelBuilder.Entity("N5NowChallengue.DataService.Models.PermissionTypePermission", b =>
                {
                    b.HasOne("N5NowChallengue.DataService.Models.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("N5NowChallengue.DataService.Models.PermissionType", "PermissionType")
                        .WithMany()
                        .HasForeignKey("PermissionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("PermissionType");
                });
#pragma warning restore 612, 618
        }
    }
}
